//
//  LoanBaseViewCtrl.m
//  ApexiPhoneOpenAccount
//
//  Created by mac  on 14-5-6.
//  Copyright (c) 2014年 mac . All rights reserved.
//

#import "LoanBaseViewCtrl.h"
#import "Data_Structure.h"

@interface LoanBaseViewCtrl (){
    UIActivityIndicatorView * indicatorView;
    CGRect rootViewFrame;
}

@end

@implementation LoanBaseViewCtrl

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
}

- (void)initConfig{
    self.view.bounds = CGRectMake(0, BOUNDS_GLOBLE, screenWidth, self.view.frame.size.height);
    rootViewFrame = self.view.frame;
}

- (void)initWidget{
    webView = [[UIWebView alloc]initWithFrame:CGRectMake(0, 0, screenWidth, screenHeight - 49)];
    
    webView.scalesPageToFit = YES;
    webView.backgroundColor = [UIColor whiteColor];
    webView.opaque = NO;
    webView.delegate = self;
    [self.view addSubview: webView];
    
    int indicatorWidth = 30;
    indicatorView = [[UIActivityIndicatorView alloc]initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray];
    [indicatorView setFrame:CGRectMake(rootViewFrame.size.width/2 - indicatorWidth/2,
                                      rootViewFrame.size.height/2 - indicatorWidth/2,
                                      indicatorWidth,
                                       indicatorWidth)];
    [indicatorView setHidesWhenStopped:YES];
    [indicatorView stopAnimating];
    [self.view addSubview:indicatorView];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    
}

- (void)webViewDidFinishLoad:(UIWebView *)webView
{
    [indicatorView stopAnimating];
}

- (void) webView: (UIWebView *)webView didFailLoadWithError: (NSError *)error
{
    [indicatorView stopAnimating];
}
//====================================================================================//
- (void)webViewDidStartLoad:(UIWebView *)webView
{
    [indicatorView startAnimating];
}
//====================================================================================//
- (BOOL) webView: (UIWebView *)_webView shouldStartLoadWithRequest: (NSURLRequest *)request navigationType: (UIWebViewNavigationType)navigationType
{
    //在这获取转向的url和链接点击事件。如点击cowork中的附件的click事件。
    NSLog(@"URL = %@",request.URL);
    
    NSLog(@"navigationType =%i", navigationType);
    
	return YES;
}

- (void)toLoadWebPage:(BOOL)toLoad{
    if(toLoad){
        [indicatorView startAnimating];
        NSURL *url = [NSURL URLWithString: webViewURL];
        NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL: url];
        [webView loadRequest:request];
    }
    else{
        [indicatorView stopAnimating];
//        webView.delegate = nil;
//        [webView stopLoading];
    }
}

/*
- (BOOL) connection: (NSURLConnection *)connection canAuthenticateAgainstProtectionSpace: (NSURLProtectionSpace *)protectionSpace
{
    NSLog(@"protectionSpace =%@",protectionSpace);
    return [protectionSpace.authenticationMethod isEqualToString: NSURLAuthenticationMethodServerTrust] ||
    [protectionSpace.authenticationMethod isEqualToString: NSURLAuthenticationMethodClientCertificate] ;
}

- (void) connection: (NSURLConnection *)connection didReceiveAuthenticationChallenge: (NSURLAuthenticationChallenge *)challenge
{
    if ([challenge.protectionSpace.authenticationMethod isEqualToString:NSURLAuthenticationMethodServerTrust])
	{
		[challenge.sender useCredential: [NSURLCredential credentialForTrust: challenge.protectionSpace.serverTrust]
			 forAuthenticationChallenge: challenge];
    }
    //为服务器信任客户端所做的操作。只写了代码,待调试
    else if([challenge.protectionSpace.authenticationMethod isEqualToString:NSURLAuthenticationMethodClientCertificate]){
        
        SecIdentityRef * outIdentity = Nil ;
        SecTrustRef* outTrust = nil;
        NSData * PKCS12Data = [NSData dataWithContentsOfFile:[[NSBundle mainBundle] pathForResource:@"custom" ofType:@"p12"]];
        
        OSStatus securityError = errSecSuccess;
        CFStringRef password = CFSTR("123456"); //证书密码
        const void *keys[] =   { kSecImportExportPassphrase };
        const void *values[] = { password };
        
        CFDictionaryRef optionsDictionary = CFDictionaryCreate(NULL, keys,values, 1,NULL, NULL);
        
        CFArrayRef items = CFArrayCreate(NULL, 0, 0, NULL);
        securityError = SecPKCS12Import((__bridge CFDataRef)PKCS12Data,(CFDictionaryRef)optionsDictionary,&items);
        
        if (securityError == 0) {
            CFDictionaryRef myIdentityAndTrust = CFArrayGetValueAtIndex (items, 0);
            const void *tempIdentity = NULL;
            tempIdentity = CFDictionaryGetValue (myIdentityAndTrust, kSecImportItemIdentity);
            *outIdentity = (SecIdentityRef)tempIdentity;
            const void *tempTrust = NULL;
            tempTrust = CFDictionaryGetValue (myIdentityAndTrust, kSecImportItemTrust);
            *outTrust = (SecTrustRef)tempTrust;
        }
        
        //两种方式，看哪种可用。
        //        SecCertificateRef myCert = SecCertificateCreateWithData(NULL, (__bridge CFDataRef)PKCS12Data);
        SecCertificateRef myCert = nil;
        SecIdentityCopyCertificate(*outIdentity, &myCert);
        SecCertificateRef certArray[1] = { myCert };
        CFArrayRef myCerts = CFArrayCreate(NULL, (void *)certArray, 1, NULL);
        CFRelease(myCert);
        NSURLCredential *credential = [NSURLCredential credentialWithIdentity:*outIdentity
                                                                 certificates:(__bridge NSArray *)myCerts
                                                                  persistence:NSURLCredentialPersistencePermanent];
        CFRelease(myCerts);
        
        [challenge.sender useCredential: credential forAuthenticationChallenge: challenge];
    }
    [challenge.sender continueWithoutCredentialForAuthenticationChallenge: challenge];
}
 */


- (void)dealloc{
    webView.delegate = nil;
    [webView stopLoading];
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
